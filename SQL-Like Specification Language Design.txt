SQL-Like Specification Language Design


General Flow Design 2
MESSAGE
LABEL
TITLE
FIND (FIRST, NOT) "" (,"", ..., "")
(WHERE condition (AND, OR condition))
((WITHIN subpiece/SOURCE_CODE FIND "" (, "", ..., ""))
(WHERE condition (AND, OR condition)))
(UNION, INTERSECT  find_clause) //could also use AND, OR here, but that complicates 											// translation a little bit; could be doable by looking for "FIND" 								   // next.
GIVE (NO) FEEDBACK (GENTLY)
(FORMAT [MESSAGE, LABEL, TITLE] USING "")



Backus-Naur Form
<spec-lang>		::= <msg-part> <label-part> <title-part> <find-part> <feedback-part>
<msg-part>		::= "MESSAGE" <message>
<label-part>	::= "LABEL" <label>
<title-part>	::= "TITLE" <title>
<find-part>		::= under development
<feedback-part>	::= "GIVE" <opt-no-part> "FEEDBACK" <opt-gent-part> <opt-form-part>
<opt-no-part>	::= "NO" | ""
<opt-gent-part>	::= "GENTLY" | ""
<opt-form-part>	::= "FORMAT" <formtype-part> "USING" <formatter>
<formtype-part>	::= "MESSAGE" | "LABEL" | "TITLE" | "MESSAGE, LABEL, TITLE" | ...



FIND PART DEVELOPMENT
<find-part>		::= "FIND" <code-to-find-1>



NOTES 3-5-2020
1. What about different messages for same test/error case? This seems like something that we should look for, based on the conversation.
2. Preconditions for running a given test, such as after 2 tests have come back positive/negative?
3. Put this stuff onto my GitHub. 